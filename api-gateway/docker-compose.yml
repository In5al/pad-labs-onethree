version: '3.8'

networks:
   api-gateway_app-network:
    external: true  # This is important
   app-network:
    driver: bridge

services:
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - app-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - app-network
    depends_on:
      - prometheus

  api-gateway:
    build: .
    ports:
      - "8080:8080"
    networks:
      - app-network
    environment:
      - SM_REDIS_URL=redis://redis:6379
      - PORT=8080
      - SERV_REST_PORT=5000
      - SERVER_TIMEOUT_MS=15000
      - MAX_CONCURRENT_REQUESTS=100
      - ERROR_THRESHOLD=3
      - ERROR_TIMEOUT=17500
      - CRITICAL_LOAD_THRESHOLD=60
      - REROUTE_THRESHOLD=2
      - NODE_ENV=development
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis-data:
  prometheus_data:
  grafana_data: